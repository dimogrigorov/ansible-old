
- hosts: alchemy2
  become: false
  strategy: debug
  #gather_facts: yes
  tasks:
    - name: include variables
      include_vars: ../vars/vault.yml
    - name: Clone a VM via template
      proxmox_kvm:
        api_user    : root@pam
        api_password: "{{ alchemy_password }}"
        api_host    : alchemy2
        clone       : "{{ template_name }}" # in case you are cloning a VM(not from a template) the value here does not matter but SHOULD be set to something
        #vmid        : 2000 # only needed if you are cloning from an existing VM. If you use it 'clone' tag is kind of ignored. You will do VM clone, not template clone!
        newid       : "{{ vmid }}" # you can omit that I think and proxmox will simply take the next available vmid
        name        : "{{ new_machine_name }}"  # The target VM or template name
        node        : alchemy2
        full        : no
        storage     : HDD-Storage
        #format      : qcow2
        #timeout     : 600  # Note: The task can take a while. Adapt
        cores       : 2
        memory      : 4096
        #pool        : # the pool that the new VM will reside to
        #virtio        : '{"virtio[0]":"HDD-Storage:10,format=qcow2"}' #probably could only be used if you are not cloning a VM or a template, but creating 
        #net         : '{"net0":"virtio,bridge=vmbr3"}'
      register: outputCloneVM
    - name: Wait a bit for the Hypervisor to catch up
      pause:
        seconds: 1
    - name: Make sure VM is Stopped
      proxmox_kvm:
        api_user    : root@pam
        api_password: "{{ alchemy_password }}"
        api_host    : alchemy2
        node        : alchemy2
        vmid        : "{{ vmid }}"
        state       : stopped
    - name: Get VM state
      proxmox_kvm:
        api_user    : root@pam
        api_password: "{{ alchemy_password }}"
        api_host    : alchemy2
        node        : alchemy2
        vmid        : "{{ vmid }}"
        state       : current
      register      : outputCurrentVM
    # Get VM current MAC
    - name: Get VM Status
      proxmox_kvm:
        api_user    : root@pam
        api_password: "{{ alchemy_password }}"
        api_host    : alchemy2
        node        : alchemy2
        vmid        : "{{ vmid }}"
        state       : present
#        clone       : False
        update      : False
      register: proxmox
        #- debug: msg="the echo was"
    - name: debug output
      debug:
        msg: "{{ proxmox }}, {{ outputCloneVM  }}, {{ outputCurrentVM }}"

...
